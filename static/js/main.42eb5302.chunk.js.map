{"version":3,"sources":["logo.svg","components/Records.js","components/Tables.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","teams","teamsj","Team","parks","parksj","Park","theader","Object","keys","teams_numeric","teams_header","i","push","id","numeric","disablePadding","label","del_elements","teams_body","j","length","key","createData","prheader","parks_numeric","parks_header","l","parks_body","m","json","values","row","k","CustomTableCellOrder","withStyles","theme","head","backgroundColor","palette","common","black","color","white","maxWidth","zindex","body","fontSize","TableCell","CustomTableCellName","minWidth","CustomTableCell","CustomTableSortLabel","root","&:hover","yellow","&:focus","TableSortLabel","stableSort","array","cmp","stabilizedThis","map","el","index","sort","a","b","order","getSorting","orderBy","TeamTableHead","this","props","react_default","createElement","TableHead","TableRow","cell","padding","React","Component","CommonTableHead","createSortHandler","property","event","_this","onRequestSort","_this2","_this$props","rowCount","sortDirection","onClick","TeamTable","state","data","handleRequestSort","_this3","setState","orderMean","_this$props2","classes","league","_this$state","jun","Paper","className","tableWrapper","Table","table","aria-labelledby","Tables_TeamTableHead","TableBody","n","League","hover","tabIndex","component","scope","チーム","試合","勝利","敗北","引分","勝率","差","CommonTable","_this4","add","_this$props3","_this$state2","default_order","default_orderBy","Tables_CommonTableHead","value","DefaultTable","Tables_TeamTable","Tables_CommonTable","App","MuiThemeProvider_default","Tables","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42eb5302.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import teamsj from \"../records/teams.json\";\r\nimport parksj from \"../records/parks.json\";\r\n\r\nconst teams = teamsj.Team;\r\nconst parks = parksj.Park;\r\n\r\nconst theader = Object.keys(teams[0]);\r\nconst teams_numeric = [false, true, true, true, true, true, false];\r\n\r\nexport const teams_header = [];\r\nfor (var i = 0; i < 7; i++) {\r\n  teams_header.push({\r\n    id: theader[i],\r\n    numeric: teams_numeric[i],\r\n    disablePadding: true,\r\n    label: theader[i]\r\n  });\r\n}\r\n\r\nvar del_elements = [\"本拠地\", \"非本拠地\"];\r\nexport const teams_body = [];\r\nfor (var j = 0; j < teams.length; j++) {\r\n  for (var key in del_elements) {\r\n    delete teams[j][key];\r\n  }\r\n  teams_body.push(createData(teams[j]));\r\n}\r\n\r\nconst prheader = Object.keys(parks[0]);\r\nconst parks_numeric = [false, true, true];\r\n\r\nexport const parks_header = [];\r\nfor (var l = 0; l < Object.keys(parks[0]).length; l++) {\r\n  parks_header.push({\r\n    id: prheader[l],\r\n    numeric: parks_numeric[l],\r\n    disablePadding: true,\r\n    label: prheader[l]\r\n  });\r\n}\r\n\r\nexport const parks_body = [];\r\nfor (var m = 0; m < parks.length; m++) {\r\n  parks_body.push(createData(parks[m]));\r\n}\r\n\r\nfunction createData(json) {\r\n  var keys = Object.keys(json);\r\n  var values = Object.values(json);\r\n  var row = {};\r\n  for (var k = 0; k < keys.length; k++) {\r\n    row[keys[k]] = values[k];\r\n  }\r\n  return row;\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { teams_header, teams_body, parks_header, parks_body } from \"./Records\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  table: {\r\n    maxWidth: 320\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  },\r\n  tab: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n});\r\n\r\nconst CustomTableCellOrder = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n    maxWidth: 10,\r\n    zindex: 3\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    zindex: 1\r\n  }\r\n}))(TableCell);\r\n\r\nconst CustomTableCellName = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n    minWidth: 90,\r\n    zindex: 3\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    minWidth: 90,\r\n    zindex: 1\r\n  }\r\n}))(TableCell);\r\n\r\nconst CustomTableCellShort = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n    minWidth: 24,\r\n    zindex: 2\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    zindex: 0\r\n  }\r\n}))(TableCell);\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n    minWidth: 90,\r\n    zindex: 2\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    minWidth: 90,\r\n    zindex: 0\r\n  }\r\n}))(TableCell);\r\n\r\nconst CustomTableSortLabel = withStyles({\r\n  root: {\r\n    \"&:hover\": {\r\n      color: yellow[600]\r\n    },\r\n    \"&:focus\": {\r\n      color: yellow[600]\r\n    },\r\n    zindex: 2\r\n  }\r\n})(TableSortLabel);\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"asc\"\r\n    ? (a, b) => a[orderBy] - b[orderBy]\r\n    : (a, b) => b[orderBy] - a[orderBy];\r\n}\r\n\r\nclass TeamTableHead extends React.Component {\r\n  render() {\r\n    const { head } = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <CustomTableCellOrder />\r\n          {head.map(cell => {\r\n            return (\r\n              <CustomTableCell\r\n                key={cell.id}\r\n                numeric={cell.numeric}\r\n                padding={cell.disablePadding ? \"checkbox\" : \"none\"}\r\n              >\r\n                {cell.label}\r\n              </CustomTableCell>\r\n            );\r\n          }, this)}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nTeamTableHead.propTypes = {\r\n  rowCount: PropTypes.number.isRequired,\r\n  head: PropTypes.array.isRequired\r\n};\r\n\r\nclass CommonTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { order, orderBy, onRequestSort, rowCount, head } = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <CustomTableCellOrder />\r\n          {head.map(cell => {\r\n            if (cell.numeric) {\r\n              return (\r\n                <CustomTableCell\r\n                  key={cell.id}\r\n                  numeric={cell.numeric}\r\n                  padding={cell.disablePadding ? \"checkbox\" : \"none\"}\r\n                  sortDirection={orderBy === cell.id ? order : false}\r\n                >\r\n                  <CustomTableSortLabel\r\n                    onClick={this.createSortHandler(cell.id)}\r\n                  >\r\n                    {cell.label}\r\n                  </CustomTableSortLabel>\r\n                </CustomTableCell>\r\n              );\r\n            } else {\r\n              return (\r\n                <CustomTableCell\r\n                  key={cell.id}\r\n                  numeric={cell.numeric}\r\n                  padding={cell.disablePadding ? \"checkbox\" : \"none\"}\r\n                >\r\n                  {cell.label}\r\n                </CustomTableCell>\r\n              );\r\n            }\r\n          }, this)}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nCommonTableHead.propTypes = {\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  head: PropTypes.array.isRequired\r\n};\r\n\r\nclass TeamTable extends React.Component {\r\n  state = {\r\n    order: \"desc\",\r\n    orderBy: \"勝率\",\r\n    head: teams_header,\r\n    data: teams_body\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    var firstOrder = \"desc\";\r\n\r\n    let order = firstOrder;\r\n    let orderMean = \"good\";\r\n\r\n    this.setState({ order, orderBy, orderMean });\r\n  };\r\n\r\n  render() {\r\n    const { classes, league } = this.props;\r\n    const { data, order, orderBy, head } = this.state;\r\n    var jun = 0;\r\n    var add = 1;\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <TeamTableHead rowCount={data.length} head={head} />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy)).map(n => {\r\n                if (n.League == league) {\r\n                  return (\r\n                    <TableRow hover tabIndex={-1} key={n.id}>\r\n                      <CustomTableCellOrder numeric padding=\"checkbox\">\r\n                        {(jun = jun + add)}\r\n                      </CustomTableCellOrder>\r\n                      <CustomTableCellName\r\n                        component=\"th\"\r\n                        scope=\"head\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {n.チーム}\r\n                      </CustomTableCellName>\r\n                      <CustomTableCell numeric padding=\"none\">\r\n                        {n.試合}\r\n                      </CustomTableCell>\r\n                      <CustomTableCell numeric padding=\"none\">\r\n                        {n.勝利}\r\n                      </CustomTableCell>\r\n                      <CustomTableCell numeric padding=\"none\">\r\n                        {n.敗北}\r\n                      </CustomTableCell>\r\n                      <CustomTableCell numeric padding=\"none\">\r\n                        {n.引分}\r\n                      </CustomTableCell>\r\n                      <CustomTableCell numeric padding=\"none\">\r\n                        {n.勝率}\r\n                      </CustomTableCell>\r\n                      <CustomTableCell padding=\"none\">{n.差}</CustomTableCell>\r\n                    </TableRow>\r\n                  );\r\n                }\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nTeamTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  league: PropTypes.string.isRequired\r\n};\r\n\r\nclass CommonTable extends React.Component {\r\n  state = {\r\n    order: \"desc\",\r\n    orderBy: \"得点PF\",\r\n    orderMean: \"good\"\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    var firstOrder;\r\n    var reverseOrder;\r\n\r\n    firstOrder = \"desc\";\r\n    reverseOrder = \"asc\";\r\n\r\n    let order = firstOrder;\r\n    let orderMean = \"good\";\r\n\r\n    if (this.state.orderBy === property && this.state.order === firstOrder) {\r\n      order = reverseOrder;\r\n      orderMean = \"bad\";\r\n    }\r\n\r\n    this.setState({ order, orderBy, orderMean });\r\n  };\r\n\r\n  render() {\r\n    const { classes, data, head, default_order, default_orderBy } = this.props;\r\n    const { order, orderBy, orderMean } = this.state;\r\n    var jun;\r\n    var add;\r\n    if (orderMean === \"bad\") {\r\n      jun = data.length + 1;\r\n      add = -1;\r\n    } else {\r\n      jun = 0;\r\n      add = 1;\r\n    }\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <CommonTableHead\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n              head={head}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy)).map(n => {\r\n                return (\r\n                  <TableRow hover tabIndex={-1} key={n.id}>\r\n                    <CustomTableCellOrder numeric padding=\"checkbox\">\r\n                      {(jun = jun + add)}\r\n                    </CustomTableCellOrder>\r\n                    {Object.keys(n).map(value => {\r\n                      return(\r\n                      <CustomTableCell numeric padding=\"none\">\r\n                        {n[value]}\r\n                      </CustomTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nCommonTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  default_order: PropTypes.string.isRequired,\r\n  default_orderBy: PropTypes.string.isRequired,\r\n  head: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired\r\n};\r\n\r\nclass DefaultTable extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>\r\n          <TeamTable classes=\"styles\" league=\"Central\" />\r\n        </p>\r\n        <p>\r\n          <TeamTable classes=\"styles\" league=\"Pacific\" />\r\n        </p>\r\n        <p>\r\n          <CommonTable\r\n            classes=\"styles\"\r\n            default_order=\"desc\"\r\n            default_orderBy=\"得点PF\"\r\n            head={parks_header}\r\n            data={parks_body}\r\n          />\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultTable;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Tables from './components/Tables';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider>\r\n    <div className=\"App\">\r\n        <Tables />\r\n    </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    // <Provider>\r\n        <App />,\r\n    // </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}