{"version":3,"sources":["logo.svg","components/Records.js","components/Tables.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","teams","teamsj","Team","parks","parksj","Park","theader","Object","keys","teams_numeric","teams_header","i","push","id","numeric","disablePadding","label","del_elements","teams_body","j","length","key","createData","prheader","parks_numeric","parks_header","l","parks_body","m","json","values","row","k","CustomTableCellOrder","withStyles","theme","head","backgroundColor","palette","common","black","color","white","maxWidth","zindex","body","fontSize","TableCell","CustomTableCellName","CustomTableCell","minWidth","CustomTableSortLabel","root","&:hover","yellow","&:focus","TableSortLabel","stableSort","array","cmp","stabilizedThis","map","el","index","sort","a","b","order","getSorting","orderBy","TeamTableHead","this","props","react_default","createElement","TableHead","TableRow","cell","padding","React","Component","CommonTableHead","createSortHandler","property","event","_this","onRequestSort","_this2","_this$props","rowCount","sortDirection","onClick","TeamTable","state","data","handleRequestSort","_this3","setState","orderMean","_this$props2","classes","league","_this$state","jun","Paper","className","tableWrapper","Table","table","aria-labelledby","Tables_TeamTableHead","TableBody","n","League","hover","tabIndex","component","scope","チーム","試合","勝利","敗北","引分","勝率","差","CommonTable","_this4","add","_this$props3","_this$state2","default_order","default_orderBy","Tables_CommonTableHead","value","DefaultPage","selected","handleTabChange","_this5","tab","AppBar","position","Tabs","scrollable","scrollButtons","onChange","Tab","href","Tables_TeamTable","Tables_CommonTable","width","marginTop","spacing","unit","overflowX","flexGrow","background","paper","App","MuiThemeProvider_default","Tables","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e36adf34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import teamsj from \"../records/teams.json\";\nimport parksj from \"../records/parks.json\";\n\nconst teams = teamsj.Team;\nconst parks = parksj.Park;\n\nconst theader = Object.keys(teams[0]);\nconst teams_numeric = [false, true, true, true, true, true, false];\n\nexport const teams_header = [];\nfor (var i = 0; i < 7; i++) {\n  teams_header.push({\n    id: theader[i],\n    numeric: teams_numeric[i],\n    disablePadding: true,\n    label: theader[i]\n  });\n}\n\nvar del_elements = [\"本拠地\", \"非本拠地\"];\nexport const teams_body = [];\nfor (var j = 0; j < teams.length; j++) {\n  for (var key in del_elements) {\n    delete teams[j][key];\n  }\n  teams_body.push(createData(teams[j]));\n}\n\nconst prheader = Object.keys(parks[0]);\nconst parks_numeric = [false, true, true];\n\nexport const parks_header = [];\nfor (var l = 0; l < Object.keys(parks[0]).length; l++) {\n  parks_header.push({\n    id: prheader[l],\n    numeric: parks_numeric[l],\n    disablePadding: true,\n    label: prheader[l]\n  });\n}\n\nexport const parks_body = [];\nfor (var m = 0; m < parks.length; m++) {\n  parks_body.push(createData(parks[m]));\n}\n\nfunction createData(json) {\n  var keys = Object.keys(json);\n  var values = Object.values(json);\n  var row = {};\n  for (var k = 0; k < keys.length; k++) {\n    row[keys[k]] = values[k];\n  }\n  return row;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { teams_header, teams_body, parks_header, parks_body } from \"./Records\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport yellow from \"@material-ui/core/colors/yellow\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3\n  },\n  table: {\n    maxWidth: 320\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  tab: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nconst CustomTableCellOrder = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n    maxWidth: 10,\n    zindex: 3\n  },\n  body: {\n    fontSize: 14,\n    zindex: 1\n  }\n}))(TableCell);\n\nconst CustomTableCellName = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n    maxWidth: 90,\n    zindex: 3\n  },\n  body: {\n    fontSize: 14,\n    maxWidth: 90,\n    zindex: 1\n  }\n}))(TableCell);\n\nconst CustomTableCellShort = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n    minWidth: 24,\n    zindex: 2\n  },\n  body: {\n    fontSize: 14,\n    zindex: 0\n  }\n}))(TableCell);\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n    maxWidth: 90,\n    zindex: 2\n  },\n  body: {\n    fontSize: 14,\n    maxWidth: 90,\n    zindex: 0\n  }\n}))(TableCell);\n\nconst CustomTableSortLabel = withStyles({\n  root: {\n    \"&:hover\": {\n      color: yellow[600]\n    },\n    \"&:focus\": {\n      color: yellow[600]\n    },\n    zindex: 2\n  }\n})(TableSortLabel);\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"asc\"\n    ? (a, b) => a[orderBy] - b[orderBy]\n    : (a, b) => b[orderBy] - a[orderBy];\n}\n\nclass TeamTableHead extends React.Component {\n  render() {\n    const { head } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <CustomTableCellOrder />\n          {head.map(cell => {\n            return (\n              <CustomTableCell\n                key={cell.id}\n                numeric={cell.numeric}\n                padding={cell.disablePadding ? \"checkbox\" : \"none\"}\n              >\n                {cell.label}\n              </CustomTableCell>\n            );\n          }, this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nTeamTableHead.propTypes = {\n  rowCount: PropTypes.number.isRequired,\n  head: PropTypes.array.isRequired\n};\n\nclass CommonTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { order, orderBy, onRequestSort, rowCount, head } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <CustomTableCellOrder />\n          {head.map(cell => {\n            if (cell.numeric) {\n              return (\n                <CustomTableCell\n                  key={cell.id}\n                  numeric={cell.numeric}\n                  padding={cell.disablePadding ? \"checkbox\" : \"none\"}\n                  sortDirection={orderBy === cell.id ? order : false}\n                >\n                  <CustomTableSortLabel\n                    onClick={this.createSortHandler(cell.id)}\n                  >\n                    {cell.label}\n                  </CustomTableSortLabel>\n                </CustomTableCell>\n              );\n            } else {\n              return (\n                <CustomTableCell\n                  key={cell.id}\n                  numeric={cell.numeric}\n                  padding={cell.disablePadding ? \"checkbox\" : \"none\"}\n                >\n                  {cell.label}\n                </CustomTableCell>\n              );\n            }\n          }, this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nCommonTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  head: PropTypes.array.isRequired\n};\n\nclass TeamTable extends React.Component {\n  state = {\n    order: \"desc\",\n    orderBy: \"勝率\",\n    head: teams_header,\n    data: teams_body\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    var firstOrder = \"desc\";\n\n    let order = firstOrder;\n    let orderMean = \"good\";\n\n    this.setState({ order, orderBy, orderMean });\n  };\n\n  render() {\n    const { classes, league } = this.props;\n    const { data, order, orderBy, head } = this.state;\n    var jun = 0;\n    var add = 1;\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <TeamTableHead rowCount={data.length} head={head} />\n            <TableBody>\n              {stableSort(data, getSorting(order, orderBy)).map(n => {\n                if (n.League == league) {\n                  return (\n                    <TableRow hover tabIndex={-1} key={n.id}>\n                      <CustomTableCellOrder numeric padding=\"checkbox\">\n                        {(jun = jun + add)}\n                      </CustomTableCellOrder>\n                      <CustomTableCellName\n                        component=\"th\"\n                        scope=\"head\"\n                        padding=\"none\"\n                      >\n                        {n.チーム}\n                      </CustomTableCellName>\n                      <CustomTableCell numeric padding=\"none\">\n                        {n.試合}\n                      </CustomTableCell>\n                      <CustomTableCell numeric padding=\"none\">\n                        {n.勝利}\n                      </CustomTableCell>\n                      <CustomTableCell numeric padding=\"none\">\n                        {n.敗北}\n                      </CustomTableCell>\n                      <CustomTableCell numeric padding=\"none\">\n                        {n.引分}\n                      </CustomTableCell>\n                      <CustomTableCell numeric padding=\"none\">\n                        {n.勝率}\n                      </CustomTableCell>\n                      <CustomTableCell padding=\"none\">{n.差}</CustomTableCell>\n                    </TableRow>\n                  );\n                }\n              })}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nTeamTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  league: PropTypes.string.isRequired\n};\n\nclass CommonTable extends React.Component {\n  state = {\n    order: \"desc\",\n    orderBy: \"得点PF\",\n    orderMean: \"good\"\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    var firstOrder;\n    var reverseOrder;\n\n    firstOrder = \"desc\";\n    reverseOrder = \"asc\";\n\n    let order = firstOrder;\n    let orderMean = \"good\";\n\n    if (this.state.orderBy === property && this.state.order === firstOrder) {\n      order = reverseOrder;\n      orderMean = \"bad\";\n    }\n\n    this.setState({ order, orderBy, orderMean });\n  };\n\n  render() {\n    const { classes, data, head, default_order, default_orderBy } = this.props;\n    const { order, orderBy, orderMean } = this.state;\n    var jun;\n    var add;\n    if (orderMean === \"bad\") {\n      jun = data.length + 1;\n      add = -1;\n    } else {\n      jun = 0;\n      add = 1;\n    }\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <CommonTableHead\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n              head={head}\n            />\n            <TableBody>\n              {stableSort(data, getSorting(order, orderBy)).map(n => {\n                return (\n                  <TableRow hover tabIndex={-1} key={n.id}>\n                    <CustomTableCellOrder numeric padding=\"checkbox\">\n                      {(jun = jun + add)}\n                    </CustomTableCellOrder>\n                    {Object.keys(n).map(value => {\n                      return(\n                      <CustomTableCell numeric padding=\"none\">\n                        {n[value]}\n                      </CustomTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nCommonTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  default_order: PropTypes.string.isRequired,\n  default_orderBy: PropTypes.string.isRequired,\n  head: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired\n};\n\nclass DefaultPage extends React.Component {\n\n  state = {\n    selected: 0,\n  }\n\n  handleTabChange = (selected) => {\n    this.setState({ selected });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { selected } = this.state;\n    return (\n      <div>\n        <p>\n        <div className={classes.tab}>\n          <AppBar position=\"static\">\n            <Tabs\n              selected={selected}\n              scrollable\n              scrollButtons=\"auto\"\n              onChange={this.handleTabChange}\n            >\n              <Tab label=\"順位表/PF\" />\n              <Tab label=\"BLOG\"><a href=\"/\"></a></Tab>\n            </Tabs>\n          </AppBar>\n        </div>\n        </p>\n        <p>\n          <TeamTable classes=\"styles\" league=\"Central\" />\n        </p>\n        <p>\n          <TeamTable classes=\"styles\" league=\"Pacific\" />\n        </p>\n        <p>\n          <CommonTable\n            classes=\"styles\"\n            default_order=\"desc\"\n            default_orderBy=\"得点PF\"\n            head={parks_header}\n            data={parks_body}\n          />\n        </p>\n      </div>\n    );\n  }\n}\n\nDefaultPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DefaultPage);\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Tables from './components/Tables';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\n\nfunction App() {\n  return (\n    <MuiThemeProvider>\n    <div className=\"App\">\n        <Tables />\n    </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    // <Provider>\n        <App />,\n    // </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}